#deploy to framworkserver
name: Build and deploy to qpon prod server

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Build with Maven
      #run: mvn -B clean install --file pom.xml
      run: mvn clean compile package -DskipTests

    - name: Copy Artifact via scp to aws server
      uses: appleboy/scp-action@master
      env:
        HOST: ${{ secrets.PROD_SERVER }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        PASSWORD: ${{ secrets.PASSWORD }}
        KEY: ${{ secrets.KEY }}
      with:
        source: "./target/auth-server-1.0.1-SNAPSHOT.jar"
        target: "/home/ubuntu/qpon/services/"

    - name: Executing remote command to run the service
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PROD_SERVER }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        PASSWORD: ${{ secrets.PASSWORD }}
        KEY: ${{ secrets.KEY }}
        envs:
          DB_USERNAME:${{ secrets.DB_USER }}
          DB_PASSWORD:${{ secrets.DB_PASS }}
        
        #script_stop: true
        script: |
          cd /home/ubuntu/qpon/services/
          NOW=$(date +"%m-%d-%Y-%H-%M")
          lsof -i :8081
          kill $(lsof -t -i:8081)
          mv auth-server-1.0.1-SNAPSHOT.jar ../logs/bkp-auth-server-1.0.1-SNAPSHOT.jar.$NOW
          mv ../logs/auth-service.log ../logs/bkp-auth-service.log.$NOW
          mv target/auth-server-1.0.1-SNAPSHOT.jar .
          export GOOGLE_APPLICATION_CREDENTIALS="/usr/local/bin/qpon-google-secret.json"
          export DB_USERNAME=${{ secrets.DB_USER }}
          export DB_PASSWORD=${{ secrets.DB_PASS }}
          nohup java -jar auth-server-1.0.1-SNAPSHOT.jar > ../logs/auth-service.log &
          rm -rf target
          netstat -lnput

  notify:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: iRoachie/slack-github-actions@v2.3.0
        with:
          status: ${{ job.status }}
        env:
          #SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_WEBHOOK_URL: https://hooks.slack.com/services/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
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
